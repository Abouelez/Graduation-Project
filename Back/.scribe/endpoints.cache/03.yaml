## Autogenerated by Scribe. DO NOT MODIFY.

name: Sections
description: |-

  Managing Sections
endpoints:
  -
    httpMethods:
      - GET
    uri: api/sections
    metadata:
      groupName: Sections
      groupDescription: |-

        Managing Sections
      subgroup: ''
      subgroupDescription: ''
      title: 'Get sections'
      description: 'List all sections.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":3,"title":"Introduction","lectures":[{"id":16,"title":"What is HTML","type":"video","content":"courses\/course51\/section3\/lecture16\/lecture.mkv"}],"quizzes":[{"id":1,"title":"Quiz_1","questions":[{"id":1,"question":"What is HTML ?","answer":"A","A":"Hyper TExt Markup Language","B":"Bla Bla","C":"Bla BLa Bla","D":"Somethig else"}]}]},{"id":4,"title":"Create Your first HTML page","lectures":[{"id":17,"title":"Main tags","type":"video","content":"courses\/course51\/section4\/lecture17\/lecture.mkv"}],"quizzes":[]}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/sections
    metadata:
      groupName: Sections
      groupDescription: |-

        Managing Sections
      subgroup: ''
      subgroupDescription: ''
      title: 'Create section'
      description: 'Store a newly created section in storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: nlssmx
        type: string
        custom: []
      course_id:
        name: course_id
        description: ''
        required: true
        example: 13
        type: integer
        custom: []
    cleanBodyParameters:
      title: nlssmx
      course_id: 13
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/sections/{id}'
    metadata:
      groupName: Sections
      groupDescription: |-

        Managing Sections
      subgroup: ''
      subgroupDescription: ''
      title: 'Display section'
      description: 'Display the specified section.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the section.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":3,"name":null}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/sections/{id}'
    metadata:
      groupName: Sections
      groupDescription: |-

        Managing Sections
      subgroup: ''
      subgroupDescription: ''
      title: 'Update section'
      description: 'Update the specified section in storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the section.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
        required: true
        example: ucgwc
        type: string
        custom: []
    cleanBodyParameters:
      title: ucgwc
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/sections/{id}'
    metadata:
      groupName: Sections
      groupDescription: |-

        Managing Sections
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Delete section
        Remove the specified section from storage.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the section.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
