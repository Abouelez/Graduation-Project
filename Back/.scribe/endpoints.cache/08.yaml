## Autogenerated by Scribe. DO NOT MODIFY.

name: Lectures
description: |-

  Managing Lectures
endpoints:
  -
    httpMethods:
      - GET
    uri: api/lectures
    metadata:
      groupName: Lectures
      groupDescription: |-

        Managing Lectures
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Lectures'
      description: 'Display a listing of the resource.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/lectures
    metadata:
      groupName: Lectures
      groupDescription: |-

        Managing Lectures
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Lecture'
      description: 'Store a newly created resource in storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 60 characters.'
        required: true
        example: fbidaskjymvmtvjmyc
        type: string
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: at
        type: string
        custom: []
      section_id:
        name: section_id
        description: ''
        required: true
        example: 10
        type: integer
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: porro
        type: string
        custom: []
    cleanBodyParameters:
      title: fbidaskjymvmtvjmyc
      type: at
      section_id: 10
      content: porro
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/lectures/{id}'
    metadata:
      groupName: Lectures
      groupDescription: |-

        Managing Lectures
      subgroup: ''
      subgroupDescription: ''
      title: 'Display Lecture'
      description: 'Display the specified resource.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the lecture.'
        required: true
        example: 16
        type: integer
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/lectures/{id}'
    metadata:
      groupName: Lectures
      groupDescription: |-

        Managing Lectures
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Lecture'
      description: 'Update the specified resource in storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the lecture.'
        required: true
        example: 16
        type: integer
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/lectures/{id}'
    metadata:
      groupName: Lectures
      groupDescription: |-

        Managing Lectures
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Lecture'
      description: 'Remove the specified resource from storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the lecture.'
        required: true
        example: 16
        type: integer
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
